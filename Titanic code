{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3136,"databundleVersionId":26502,"sourceType":"competition"}],"dockerImageVersionId":30822,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:15:56.722379Z","iopub.execute_input":"2024-12-25T08:15:56.722696Z","iopub.status.idle":"2024-12-25T08:15:57.095975Z","shell.execute_reply.started":"2024-12-25T08:15:56.722668Z","shell.execute_reply":"2024-12-25T08:15:57.095006Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/titanic/train.csv\n/kaggle/input/titanic/test.csv\n/kaggle/input/titanic/gender_submission.csv\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"df=pd.read_csv(r'/kaggle/input/titanic/train.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:16:02.176353Z","iopub.execute_input":"2024-12-25T08:16:02.176779Z","iopub.status.idle":"2024-12-25T08:16:02.195632Z","shell.execute_reply.started":"2024-12-25T08:16:02.176750Z","shell.execute_reply":"2024-12-25T08:16:02.194388Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:16:06.306507Z","iopub.execute_input":"2024-12-25T08:16:06.306954Z","iopub.status.idle":"2024-12-25T08:16:06.336109Z","shell.execute_reply.started":"2024-12-25T08:16:06.306897Z","shell.execute_reply":"2024-12-25T08:16:06.335003Z"}},"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name     Sex   Age  SibSp  \\\n0                            Braund, Mr. Owen Harris    male  22.0      1   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n2                             Heikkinen, Miss. Laina  female  26.0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n4                           Allen, Mr. William Henry    male  35.0      0   \n\n   Parch            Ticket     Fare Cabin Embarked  \n0      0         A/5 21171   7.2500   NaN        S  \n1      0          PC 17599  71.2833   C85        C  \n2      0  STON/O2. 3101282   7.9250   NaN        S  \n3      0            113803  53.1000  C123        S  \n4      0            373450   8.0500   NaN        S  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Braund, Mr. Owen Harris</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>C85</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Heikkinen, Miss. Laina</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>C123</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Allen, Mr. William Henry</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"#df_gender=pd.read_csv(r'/kaggle/input/titanic/gender_submission.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-24T17:09:47.931909Z","iopub.execute_input":"2024-12-24T17:09:47.932313Z","iopub.status.idle":"2024-12-24T17:09:47.936168Z","shell.execute_reply.started":"2024-12-24T17:09:47.932282Z","shell.execute_reply":"2024-12-24T17:09:47.935248Z"}},"outputs":[],"execution_count":4},{"cell_type":"code","source":"#df_gender.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-24T17:09:47.937223Z","iopub.execute_input":"2024-12-24T17:09:47.937515Z","iopub.status.idle":"2024-12-24T17:09:47.953260Z","shell.execute_reply.started":"2024-12-24T17:09:47.937491Z","shell.execute_reply":"2024-12-24T17:09:47.952292Z"}},"outputs":[],"execution_count":5},{"cell_type":"code","source":"df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:16:10.496689Z","iopub.execute_input":"2024-12-25T08:16:10.497153Z","iopub.status.idle":"2024-12-25T08:16:10.520611Z","shell.execute_reply.started":"2024-12-25T08:16:10.497119Z","shell.execute_reply":"2024-12-25T08:16:10.519686Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 891 entries, 0 to 890\nData columns (total 12 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   PassengerId  891 non-null    int64  \n 1   Survived     891 non-null    int64  \n 2   Pclass       891 non-null    int64  \n 3   Name         891 non-null    object \n 4   Sex          891 non-null    object \n 5   Age          714 non-null    float64\n 6   SibSp        891 non-null    int64  \n 7   Parch        891 non-null    int64  \n 8   Ticket       891 non-null    object \n 9   Fare         891 non-null    float64\n 10  Cabin        204 non-null    object \n 11  Embarked     889 non-null    object \ndtypes: float64(2), int64(5), object(5)\nmemory usage: 83.7+ KB\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"df.set_index('PassengerId')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:16:14.856695Z","iopub.execute_input":"2024-12-25T08:16:14.857143Z","iopub.status.idle":"2024-12-25T08:16:14.878382Z","shell.execute_reply.started":"2024-12-25T08:16:14.857108Z","shell.execute_reply":"2024-12-25T08:16:14.877232Z"}},"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"             Survived  Pclass  \\\nPassengerId                     \n1                   0       3   \n2                   1       1   \n3                   1       3   \n4                   1       1   \n5                   0       3   \n...               ...     ...   \n887                 0       2   \n888                 1       1   \n889                 0       3   \n890                 1       1   \n891                 0       3   \n\n                                                          Name     Sex   Age  \\\nPassengerId                                                                    \n1                                      Braund, Mr. Owen Harris    male  22.0   \n2            Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0   \n3                                       Heikkinen, Miss. Laina  female  26.0   \n4                 Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0   \n5                                     Allen, Mr. William Henry    male  35.0   \n...                                                        ...     ...   ...   \n887                                      Montvila, Rev. Juozas    male  27.0   \n888                               Graham, Miss. Margaret Edith  female  19.0   \n889                   Johnston, Miss. Catherine Helen \"Carrie\"  female   NaN   \n890                                      Behr, Mr. Karl Howell    male  26.0   \n891                                        Dooley, Mr. Patrick    male  32.0   \n\n             SibSp  Parch            Ticket     Fare Cabin Embarked  \nPassengerId                                                          \n1                1      0         A/5 21171   7.2500   NaN        S  \n2                1      0          PC 17599  71.2833   C85        C  \n3                0      0  STON/O2. 3101282   7.9250   NaN        S  \n4                1      0            113803  53.1000  C123        S  \n5                0      0            373450   8.0500   NaN        S  \n...            ...    ...               ...      ...   ...      ...  \n887              0      0            211536  13.0000   NaN        S  \n888              0      0            112053  30.0000   B42        S  \n889              1      2        W./C. 6607  23.4500   NaN        S  \n890              0      0            111369  30.0000  C148        C  \n891              0      0            370376   7.7500   NaN        Q  \n\n[891 rows x 11 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n    <tr>\n      <th>PassengerId</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>3</td>\n      <td>Braund, Mr. Owen Harris</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>1</td>\n      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>C85</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>3</td>\n      <td>Heikkinen, Miss. Laina</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>1</td>\n      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>C123</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0</td>\n      <td>3</td>\n      <td>Allen, Mr. William Henry</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>887</th>\n      <td>0</td>\n      <td>2</td>\n      <td>Montvila, Rev. Juozas</td>\n      <td>male</td>\n      <td>27.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>211536</td>\n      <td>13.0000</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>888</th>\n      <td>1</td>\n      <td>1</td>\n      <td>Graham, Miss. Margaret Edith</td>\n      <td>female</td>\n      <td>19.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>112053</td>\n      <td>30.0000</td>\n      <td>B42</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>889</th>\n      <td>0</td>\n      <td>3</td>\n      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n      <td>female</td>\n      <td>NaN</td>\n      <td>1</td>\n      <td>2</td>\n      <td>W./C. 6607</td>\n      <td>23.4500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>890</th>\n      <td>1</td>\n      <td>1</td>\n      <td>Behr, Mr. Karl Howell</td>\n      <td>male</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>111369</td>\n      <td>30.0000</td>\n      <td>C148</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>891</th>\n      <td>0</td>\n      <td>3</td>\n      <td>Dooley, Mr. Patrick</td>\n      <td>male</td>\n      <td>32.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>370376</td>\n      <td>7.7500</td>\n      <td>NaN</td>\n      <td>Q</td>\n    </tr>\n  </tbody>\n</table>\n<p>891 rows × 11 columns</p>\n</div>"},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"df['Sex']=df['Sex'].map({\"male\":0,\"female\":1})\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:16:19.566905Z","iopub.execute_input":"2024-12-25T08:16:19.567426Z","iopub.status.idle":"2024-12-25T08:16:19.574568Z","shell.execute_reply.started":"2024-12-25T08:16:19.567377Z","shell.execute_reply":"2024-12-25T08:16:19.573461Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:16:23.596513Z","iopub.execute_input":"2024-12-25T08:16:23.596842Z","iopub.status.idle":"2024-12-25T08:16:23.611011Z","shell.execute_reply.started":"2024-12-25T08:16:23.596813Z","shell.execute_reply":"2024-12-25T08:16:23.609836Z"}},"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name  Sex   Age  SibSp  Parch  \\\n0                            Braund, Mr. Owen Harris    0  22.0      1      0   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...    1  38.0      1      0   \n2                             Heikkinen, Miss. Laina    1  26.0      0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)    1  35.0      1      0   \n4                           Allen, Mr. William Henry    0  35.0      0      0   \n\n             Ticket     Fare Cabin Embarked  \n0         A/5 21171   7.2500   NaN        S  \n1          PC 17599  71.2833   C85        C  \n2  STON/O2. 3101282   7.9250   NaN        S  \n3            113803  53.1000  C123        S  \n4            373450   8.0500   NaN        S  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Braund, Mr. Owen Harris</td>\n      <td>0</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n      <td>1</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>C85</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Heikkinen, Miss. Laina</td>\n      <td>1</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n      <td>1</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>C123</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Allen, Mr. William Henry</td>\n      <td>0</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":8},{"cell_type":"code","source":"#counts = df_train['Age'].value_counts()\n#print(counts)\ndf['Age'] = df['Age'].fillna(0)\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:16:28.486653Z","iopub.execute_input":"2024-12-25T08:16:28.487031Z","iopub.status.idle":"2024-12-25T08:16:28.492730Z","shell.execute_reply.started":"2024-12-25T08:16:28.486998Z","shell.execute_reply":"2024-12-25T08:16:28.491670Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:16:31.676507Z","iopub.execute_input":"2024-12-25T08:16:31.676881Z","iopub.status.idle":"2024-12-25T08:16:31.689993Z","shell.execute_reply.started":"2024-12-25T08:16:31.676845Z","shell.execute_reply":"2024-12-25T08:16:31.688408Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 891 entries, 0 to 890\nData columns (total 12 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   PassengerId  891 non-null    int64  \n 1   Survived     891 non-null    int64  \n 2   Pclass       891 non-null    int64  \n 3   Name         891 non-null    object \n 4   Sex          891 non-null    int64  \n 5   Age          891 non-null    float64\n 6   SibSp        891 non-null    int64  \n 7   Parch        891 non-null    int64  \n 8   Ticket       891 non-null    object \n 9   Fare         891 non-null    float64\n 10  Cabin        204 non-null    object \n 11  Embarked     889 non-null    object \ndtypes: float64(2), int64(6), object(4)\nmemory usage: 83.7+ KB\n","output_type":"stream"}],"execution_count":10},{"cell_type":"code","source":"df['Cabin'] = df['Cabin'].fillna('F33')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:16:35.676463Z","iopub.execute_input":"2024-12-25T08:16:35.676826Z","iopub.status.idle":"2024-12-25T08:16:35.682942Z","shell.execute_reply.started":"2024-12-25T08:16:35.676794Z","shell.execute_reply":"2024-12-25T08:16:35.682016Z"}},"outputs":[],"execution_count":11},{"cell_type":"code","source":"\ndf['Embarked']=df['Embarked'].fillna('C')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:16:39.286313Z","iopub.execute_input":"2024-12-25T08:16:39.286635Z","iopub.status.idle":"2024-12-25T08:16:39.292440Z","shell.execute_reply.started":"2024-12-25T08:16:39.286610Z","shell.execute_reply":"2024-12-25T08:16:39.291283Z"}},"outputs":[],"execution_count":12},{"cell_type":"code","source":"df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:16:41.932000Z","iopub.execute_input":"2024-12-25T08:16:41.932363Z","iopub.status.idle":"2024-12-25T08:16:41.944317Z","shell.execute_reply.started":"2024-12-25T08:16:41.932333Z","shell.execute_reply":"2024-12-25T08:16:41.943166Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 891 entries, 0 to 890\nData columns (total 12 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   PassengerId  891 non-null    int64  \n 1   Survived     891 non-null    int64  \n 2   Pclass       891 non-null    int64  \n 3   Name         891 non-null    object \n 4   Sex          891 non-null    int64  \n 5   Age          891 non-null    float64\n 6   SibSp        891 non-null    int64  \n 7   Parch        891 non-null    int64  \n 8   Ticket       891 non-null    object \n 9   Fare         891 non-null    float64\n 10  Cabin        891 non-null    object \n 11  Embarked     891 non-null    object \ndtypes: float64(2), int64(6), object(4)\nmemory usage: 83.7+ KB\n","output_type":"stream"}],"execution_count":13},{"cell_type":"code","source":"duplicates = df[df.duplicated()]\nprint(duplicates)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:16:45.656500Z","iopub.execute_input":"2024-12-25T08:16:45.656893Z","iopub.status.idle":"2024-12-25T08:16:45.670431Z","shell.execute_reply.started":"2024-12-25T08:16:45.656852Z","shell.execute_reply":"2024-12-25T08:16:45.669322Z"}},"outputs":[{"name":"stdout","text":"Empty DataFrame\nColumns: [PassengerId, Survived, Pclass, Name, Sex, Age, SibSp, Parch, Ticket, Fare, Cabin, Embarked]\nIndex: []\n","output_type":"stream"}],"execution_count":14},{"cell_type":"code","source":"value_counts = df['Embarked'].value_counts()\nprint(value_counts)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:16:49.886343Z","iopub.execute_input":"2024-12-25T08:16:49.886680Z","iopub.status.idle":"2024-12-25T08:16:49.893164Z","shell.execute_reply.started":"2024-12-25T08:16:49.886652Z","shell.execute_reply":"2024-12-25T08:16:49.891633Z"}},"outputs":[{"name":"stdout","text":"Embarked\nS    644\nC    170\nQ     77\nName: count, dtype: int64\n","output_type":"stream"}],"execution_count":15},{"cell_type":"code","source":"df['Embarked']=df['Embarked'].map({'S':0,'C':1,'Q':2})\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:16:53.341834Z","iopub.execute_input":"2024-12-25T08:16:53.342257Z","iopub.status.idle":"2024-12-25T08:16:53.348236Z","shell.execute_reply.started":"2024-12-25T08:16:53.342223Z","shell.execute_reply":"2024-12-25T08:16:53.347072Z"}},"outputs":[],"execution_count":16},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:16:59.236601Z","iopub.execute_input":"2024-12-25T08:16:59.236957Z","iopub.status.idle":"2024-12-25T08:16:59.251151Z","shell.execute_reply.started":"2024-12-25T08:16:59.236906Z","shell.execute_reply":"2024-12-25T08:16:59.249990Z"}},"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name  Sex   Age  SibSp  Parch  \\\n0                            Braund, Mr. Owen Harris    0  22.0      1      0   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...    1  38.0      1      0   \n2                             Heikkinen, Miss. Laina    1  26.0      0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)    1  35.0      1      0   \n4                           Allen, Mr. William Henry    0  35.0      0      0   \n\n             Ticket     Fare Cabin  Embarked  \n0         A/5 21171   7.2500   F33         0  \n1          PC 17599  71.2833   C85         1  \n2  STON/O2. 3101282   7.9250   F33         0  \n3            113803  53.1000  C123         0  \n4            373450   8.0500   F33         0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Braund, Mr. Owen Harris</td>\n      <td>0</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>F33</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n      <td>1</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>C85</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Heikkinen, Miss. Laina</td>\n      <td>1</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>F33</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n      <td>1</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>C123</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Allen, Mr. William Henry</td>\n      <td>0</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>F33</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":17},{"cell_type":"code","source":"value_counts = df['Cabin'].value_counts()\nprint(value_counts)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:17:03.961832Z","iopub.execute_input":"2024-12-25T08:17:03.962226Z","iopub.status.idle":"2024-12-25T08:17:03.970331Z","shell.execute_reply.started":"2024-12-25T08:17:03.962196Z","shell.execute_reply":"2024-12-25T08:17:03.969276Z"}},"outputs":[{"name":"stdout","text":"Cabin\nF33            690\nC23 C25 C27      4\nG6               4\nB96 B98          4\nC22 C26          3\n              ... \nE34              1\nC7               1\nC54              1\nE36              1\nC148             1\nName: count, Length: 147, dtype: int64\n","output_type":"stream"}],"execution_count":18},{"cell_type":"code","source":"df['Cabin'] = pd.factorize(df['Cabin'])[0]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:17:07.371570Z","iopub.execute_input":"2024-12-25T08:17:07.371892Z","iopub.status.idle":"2024-12-25T08:17:07.377726Z","shell.execute_reply.started":"2024-12-25T08:17:07.371865Z","shell.execute_reply":"2024-12-25T08:17:07.376426Z"}},"outputs":[],"execution_count":19},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:17:10.586505Z","iopub.execute_input":"2024-12-25T08:17:10.586831Z","iopub.status.idle":"2024-12-25T08:17:10.599948Z","shell.execute_reply.started":"2024-12-25T08:17:10.586803Z","shell.execute_reply":"2024-12-25T08:17:10.598969Z"}},"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name  Sex   Age  SibSp  Parch  \\\n0                            Braund, Mr. Owen Harris    0  22.0      1      0   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...    1  38.0      1      0   \n2                             Heikkinen, Miss. Laina    1  26.0      0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)    1  35.0      1      0   \n4                           Allen, Mr. William Henry    0  35.0      0      0   \n\n             Ticket     Fare  Cabin  Embarked  \n0         A/5 21171   7.2500      0         0  \n1          PC 17599  71.2833      1         1  \n2  STON/O2. 3101282   7.9250      0         0  \n3            113803  53.1000      2         0  \n4            373450   8.0500      0         0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Braund, Mr. Owen Harris</td>\n      <td>0</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n      <td>1</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Heikkinen, Miss. Laina</td>\n      <td>1</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n      <td>1</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Allen, Mr. William Henry</td>\n      <td>0</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":20},{"cell_type":"code","source":"X=df[['PassengerId',  'Pclass', 'Sex', 'Age', 'SibSp', 'Parch',  'Fare', 'Cabin', 'Embarked']]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:17:14.176517Z","iopub.execute_input":"2024-12-25T08:17:14.176881Z","iopub.status.idle":"2024-12-25T08:17:14.182246Z","shell.execute_reply.started":"2024-12-25T08:17:14.176848Z","shell.execute_reply":"2024-12-25T08:17:14.180996Z"}},"outputs":[],"execution_count":21},{"cell_type":"code","source":"Y=df['Survived']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:17:20.336796Z","iopub.execute_input":"2024-12-25T08:17:20.337158Z","iopub.status.idle":"2024-12-25T08:17:20.341345Z","shell.execute_reply.started":"2024-12-25T08:17:20.337128Z","shell.execute_reply":"2024-12-25T08:17:20.340328Z"}},"outputs":[],"execution_count":22},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(X,Y, train_size=0.8, random_state=2529)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:17:26.401858Z","iopub.execute_input":"2024-12-25T08:17:26.402272Z","iopub.status.idle":"2024-12-25T08:17:26.975726Z","shell.execute_reply.started":"2024-12-25T08:17:26.402241Z","shell.execute_reply":"2024-12-25T08:17:26.974792Z"}},"outputs":[],"execution_count":23},{"cell_type":"code","source":"X_train.shape, X_test.shape, Y_train.shape, Y_test.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:17:31.696557Z","iopub.execute_input":"2024-12-25T08:17:31.697152Z","iopub.status.idle":"2024-12-25T08:17:31.703603Z","shell.execute_reply.started":"2024-12-25T08:17:31.697118Z","shell.execute_reply":"2024-12-25T08:17:31.702569Z"}},"outputs":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"((712, 9), (179, 9), (712,), (179,))"},"metadata":{}}],"execution_count":24},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX_train_scaled = scaler.fit_transform(X_train)\nX_test_scaled = scaler.transform(X_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:17:37.841431Z","iopub.execute_input":"2024-12-25T08:17:37.841760Z","iopub.status.idle":"2024-12-25T08:17:37.853520Z","shell.execute_reply.started":"2024-12-25T08:17:37.841734Z","shell.execute_reply":"2024-12-25T08:17:37.852407Z"}},"outputs":[],"execution_count":25},{"cell_type":"code","source":"from sklearn.svm import SVC","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:17:43.101567Z","iopub.execute_input":"2024-12-25T08:17:43.101954Z","iopub.status.idle":"2024-12-25T08:17:43.197233Z","shell.execute_reply.started":"2024-12-25T08:17:43.101893Z","shell.execute_reply":"2024-12-25T08:17:43.196184Z"}},"outputs":[],"execution_count":26},{"cell_type":"code","source":"svm_model = SVC(kernel='rbf', random_state=2529)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:17:46.706560Z","iopub.execute_input":"2024-12-25T08:17:46.707041Z","iopub.status.idle":"2024-12-25T08:17:46.711677Z","shell.execute_reply.started":"2024-12-25T08:17:46.707001Z","shell.execute_reply":"2024-12-25T08:17:46.710439Z"}},"outputs":[],"execution_count":27},{"cell_type":"code","source":"svm_model.fit(X_train_scaled, Y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:17:50.091712Z","iopub.execute_input":"2024-12-25T08:17:50.092206Z","iopub.status.idle":"2024-12-25T08:17:50.122404Z","shell.execute_reply.started":"2024-12-25T08:17:50.092173Z","shell.execute_reply":"2024-12-25T08:17:50.121485Z"}},"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"SVC(random_state=2529)","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC(random_state=2529)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(random_state=2529)</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":28},{"cell_type":"code","source":"Y_pred = svm_model.predict(X_test_scaled)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:18:12.507219Z","iopub.execute_input":"2024-12-25T08:18:12.507590Z","iopub.status.idle":"2024-12-25T08:18:12.516794Z","shell.execute_reply.started":"2024-12-25T08:18:12.507558Z","shell.execute_reply":"2024-12-25T08:18:12.515537Z"}},"outputs":[],"execution_count":30},{"cell_type":"code","source":"from sklearn.metrics import accuracy_score\naccuracy = accuracy_score(Y_test, Y_pred)\nprint(f'Accuracy: {accuracy * 100:.2f}%')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:18:16.206592Z","iopub.execute_input":"2024-12-25T08:18:16.206968Z","iopub.status.idle":"2024-12-25T08:18:16.213881Z","shell.execute_reply.started":"2024-12-25T08:18:16.206910Z","shell.execute_reply":"2024-12-25T08:18:16.212740Z"}},"outputs":[{"name":"stdout","text":"Accuracy: 77.65%\n","output_type":"stream"}],"execution_count":31},{"cell_type":"markdown","source":"Oversampling","metadata":{}},{"cell_type":"code","source":"from imblearn.over_sampling import RandomOverSampler\n\nros = RandomOverSampler(random_state=42)\nX_resampled, Y_resampled = ros.fit_resample(X, Y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:20:21.946708Z","iopub.execute_input":"2024-12-25T08:20:21.947136Z","iopub.status.idle":"2024-12-25T08:20:22.493100Z","shell.execute_reply.started":"2024-12-25T08:20:21.947105Z","shell.execute_reply":"2024-12-25T08:20:22.492197Z"}},"outputs":[],"execution_count":32},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nX_resampled_train, X_resampled_test, Y_resampled_train, Y_resampled_test = train_test_split(X_resampled, Y_resampled, train_size=0.8, random_state=2530)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:21:14.153457Z","iopub.execute_input":"2024-12-25T08:21:14.153972Z","iopub.status.idle":"2024-12-25T08:21:14.162432Z","shell.execute_reply.started":"2024-12-25T08:21:14.153941Z","shell.execute_reply":"2024-12-25T08:21:14.161173Z"}},"outputs":[],"execution_count":33},{"cell_type":"code","source":"X_resampled_train.shape, X_resampled_test.shape, Y_resampled_train.shape, Y_resampled_test.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:22:00.406621Z","iopub.execute_input":"2024-12-25T08:22:00.406996Z","iopub.status.idle":"2024-12-25T08:22:00.413289Z","shell.execute_reply.started":"2024-12-25T08:22:00.406964Z","shell.execute_reply":"2024-12-25T08:22:00.412324Z"}},"outputs":[{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"((878, 9), (220, 9), (878,), (220,))"},"metadata":{}}],"execution_count":34},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX_resampled_train_scaled = scaler.fit_transform(X_resampled_train)\nX_resampled_test_scaled = scaler.transform(X_resampled_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:24:35.076687Z","iopub.execute_input":"2024-12-25T08:24:35.077119Z","iopub.status.idle":"2024-12-25T08:24:35.089350Z","shell.execute_reply.started":"2024-12-25T08:24:35.077083Z","shell.execute_reply":"2024-12-25T08:24:35.088233Z"}},"outputs":[],"execution_count":35},{"cell_type":"code","source":"svm_model.fit(X_resampled_train_scaled, Y_resampled_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:25:33.057241Z","iopub.execute_input":"2024-12-25T08:25:33.057592Z","iopub.status.idle":"2024-12-25T08:25:33.092599Z","shell.execute_reply.started":"2024-12-25T08:25:33.057559Z","shell.execute_reply":"2024-12-25T08:25:33.091500Z"}},"outputs":[{"execution_count":37,"output_type":"execute_result","data":{"text/plain":"SVC(random_state=2529)","text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC(random_state=2529)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(random_state=2529)</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":37},{"cell_type":"code","source":"Y_resampled_pred = svm_model.predict(X_resampled_test_scaled)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:26:40.527445Z","iopub.execute_input":"2024-12-25T08:26:40.527980Z","iopub.status.idle":"2024-12-25T08:26:40.543386Z","shell.execute_reply.started":"2024-12-25T08:26:40.527913Z","shell.execute_reply":"2024-12-25T08:26:40.541848Z"}},"outputs":[],"execution_count":39},{"cell_type":"code","source":"accuracy = accuracy_score(Y_resampled_test, Y_resampled_pred)\nprint(f'Accuracy: {accuracy * 100:.2f}%')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:27:21.766918Z","iopub.execute_input":"2024-12-25T08:27:21.767351Z","iopub.status.idle":"2024-12-25T08:27:21.774306Z","shell.execute_reply.started":"2024-12-25T08:27:21.767321Z","shell.execute_reply":"2024-12-25T08:27:21.773057Z"}},"outputs":[{"name":"stdout","text":"Accuracy: 80.91%\n","output_type":"stream"}],"execution_count":40},{"cell_type":"markdown","source":"Undersampling","metadata":{}},{"cell_type":"code","source":"from imblearn.under_sampling import RandomUnderSampler\n\nrus = RandomUnderSampler(random_state=42)\nX_undersampled, Y_undersampled = rus.fit_resample(X, Y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:29:54.397338Z","iopub.execute_input":"2024-12-25T08:29:54.397709Z","iopub.status.idle":"2024-12-25T08:29:54.408986Z","shell.execute_reply.started":"2024-12-25T08:29:54.397680Z","shell.execute_reply":"2024-12-25T08:29:54.407784Z"}},"outputs":[],"execution_count":41},{"cell_type":"code","source":"X_undersampled_train, X_undersampled_test, Y_undersampled_train, Y_undersampled_test = train_test_split(X_undersampled, Y_undersampled, train_size=0.8, random_state=2530)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:31:08.817070Z","iopub.execute_input":"2024-12-25T08:31:08.817429Z","iopub.status.idle":"2024-12-25T08:31:08.826026Z","shell.execute_reply.started":"2024-12-25T08:31:08.817402Z","shell.execute_reply":"2024-12-25T08:31:08.824977Z"}},"outputs":[],"execution_count":42},{"cell_type":"code","source":"X_undersampled_train.shape, X_undersampled_test.shape, Y_undersampled_train.shape, Y_undersampled_test.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:32:44.566690Z","iopub.execute_input":"2024-12-25T08:32:44.567110Z","iopub.status.idle":"2024-12-25T08:32:44.573826Z","shell.execute_reply.started":"2024-12-25T08:32:44.567075Z","shell.execute_reply":"2024-12-25T08:32:44.572491Z"}},"outputs":[{"execution_count":43,"output_type":"execute_result","data":{"text/plain":"((547, 9), (137, 9), (547,), (137,))"},"metadata":{}}],"execution_count":43},{"cell_type":"code","source":"X_undersampled_train_scaled = scaler.fit_transform(X_undersampled_train)\nX_undersampled_test_scaled = scaler.transform(X_undersampled_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:33:13.267240Z","iopub.execute_input":"2024-12-25T08:33:13.267626Z","iopub.status.idle":"2024-12-25T08:33:13.279225Z","shell.execute_reply.started":"2024-12-25T08:33:13.267590Z","shell.execute_reply":"2024-12-25T08:33:13.278323Z"}},"outputs":[],"execution_count":44},{"cell_type":"code","source":"svm_model.fit(X_undersampled_train_scaled, Y_undersampled_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:33:19.436354Z","iopub.execute_input":"2024-12-25T08:33:19.436674Z","iopub.status.idle":"2024-12-25T08:33:19.456189Z","shell.execute_reply.started":"2024-12-25T08:33:19.436648Z","shell.execute_reply":"2024-12-25T08:33:19.454689Z"}},"outputs":[{"execution_count":45,"output_type":"execute_result","data":{"text/plain":"SVC(random_state=2529)","text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC(random_state=2529)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(random_state=2529)</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":45},{"cell_type":"code","source":"Y_undersampled_pred = svm_model.predict(X_undersampled_test_scaled)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:33:31.851965Z","iopub.execute_input":"2024-12-25T08:33:31.852321Z","iopub.status.idle":"2024-12-25T08:33:31.860097Z","shell.execute_reply.started":"2024-12-25T08:33:31.852291Z","shell.execute_reply":"2024-12-25T08:33:31.859132Z"}},"outputs":[],"execution_count":46},{"cell_type":"code","source":"accuracy = accuracy_score(Y_undersampled_test, Y_undersampled_pred)\nprint(f'Accuracy: {accuracy * 100:.2f}%')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:33:43.581745Z","iopub.execute_input":"2024-12-25T08:33:43.582156Z","iopub.status.idle":"2024-12-25T08:33:43.588802Z","shell.execute_reply.started":"2024-12-25T08:33:43.582120Z","shell.execute_reply":"2024-12-25T08:33:43.587594Z"}},"outputs":[{"name":"stdout","text":"Accuracy: 75.91%\n","output_type":"stream"}],"execution_count":47},{"cell_type":"markdown","source":"Oversampling better, next we do hyper[arameter tuning","metadata":{}},{"cell_type":"markdown","source":"Hyperparameter tuning using gridsearch algorithm","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import GridSearchCV","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:39:05.566723Z","iopub.execute_input":"2024-12-25T08:39:05.567113Z","iopub.status.idle":"2024-12-25T08:39:05.571487Z","shell.execute_reply.started":"2024-12-25T08:39:05.567085Z","shell.execute_reply":"2024-12-25T08:39:05.570285Z"}},"outputs":[],"execution_count":49},{"cell_type":"code","source":"param_grid={\n    'C': [0.1,1,10],\n    'gamma': [1,0.1,0.01],\n    'kernel': ['rbf'],\n    'class_weight': ['balanced']\n}\ngrid=GridSearchCV(SVC(),param_grid,refit=True,verbose=2, cv=2)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:44:15.661801Z","iopub.execute_input":"2024-12-25T08:44:15.662202Z","iopub.status.idle":"2024-12-25T08:44:15.667225Z","shell.execute_reply.started":"2024-12-25T08:44:15.662174Z","shell.execute_reply":"2024-12-25T08:44:15.666090Z"}},"outputs":[],"execution_count":53},{"cell_type":"code","source":"grid.fit(X_resampled_train_scaled, Y_resampled_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:45:05.887024Z","iopub.execute_input":"2024-12-25T08:45:05.887424Z","iopub.status.idle":"2024-12-25T08:45:06.284001Z","shell.execute_reply.started":"2024-12-25T08:45:05.887391Z","shell.execute_reply":"2024-12-25T08:45:06.282843Z"}},"outputs":[{"name":"stdout","text":"Fitting 2 folds for each of 9 candidates, totalling 18 fits\n[CV] END ..C=0.1, class_weight=balanced, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ..C=0.1, class_weight=balanced, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END C=0.1, class_weight=balanced, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END C=0.1, class_weight=balanced, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END C=0.1, class_weight=balanced, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END C=0.1, class_weight=balanced, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ....C=1, class_weight=balanced, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ....C=1, class_weight=balanced, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ..C=1, class_weight=balanced, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END ..C=1, class_weight=balanced, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .C=1, class_weight=balanced, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END .C=1, class_weight=balanced, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ...C=10, class_weight=balanced, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ...C=10, class_weight=balanced, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .C=10, class_weight=balanced, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .C=10, class_weight=balanced, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END C=10, class_weight=balanced, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END C=10, class_weight=balanced, gamma=0.01, kernel=rbf; total time=   0.0s\n","output_type":"stream"},{"execution_count":54,"output_type":"execute_result","data":{"text/plain":"GridSearchCV(cv=2, estimator=SVC(),\n             param_grid={'C': [0.1, 1, 10], 'class_weight': ['balanced'],\n                         'gamma': [1, 0.1, 0.01], 'kernel': ['rbf']},\n             verbose=2)","text/html":"<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=2, estimator=SVC(),\n             param_grid={&#x27;C&#x27;: [0.1, 1, 10], &#x27;class_weight&#x27;: [&#x27;balanced&#x27;],\n                         &#x27;gamma&#x27;: [1, 0.1, 0.01], &#x27;kernel&#x27;: [&#x27;rbf&#x27;]},\n             verbose=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=2, estimator=SVC(),\n             param_grid={&#x27;C&#x27;: [0.1, 1, 10], &#x27;class_weight&#x27;: [&#x27;balanced&#x27;],\n                         &#x27;gamma&#x27;: [1, 0.1, 0.01], &#x27;kernel&#x27;: [&#x27;rbf&#x27;]},\n             verbose=2)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: SVC</label><div class=\"sk-toggleable__content\"><pre>SVC()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC()</pre></div></div></div></div></div></div></div></div></div></div>"},"metadata":{}}],"execution_count":54},{"cell_type":"code","source":"print(grid.best_estimator_)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:45:46.236716Z","iopub.execute_input":"2024-12-25T08:45:46.237180Z","iopub.status.idle":"2024-12-25T08:45:46.243456Z","shell.execute_reply.started":"2024-12-25T08:45:46.237144Z","shell.execute_reply":"2024-12-25T08:45:46.242161Z"}},"outputs":[{"name":"stdout","text":"SVC(C=10, class_weight='balanced', gamma=0.1)\n","output_type":"stream"}],"execution_count":55},{"cell_type":"code","source":"grid_predictions=grid.predict(X_resampled_test_scaled)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:46:53.856901Z","iopub.execute_input":"2024-12-25T08:46:53.857412Z","iopub.status.idle":"2024-12-25T08:46:53.870411Z","shell.execute_reply.started":"2024-12-25T08:46:53.857367Z","shell.execute_reply":"2024-12-25T08:46:53.869080Z"}},"outputs":[],"execution_count":57},{"cell_type":"code","source":"accuracy = accuracy_score(Y_resampled_test, grid_predictions)\nprint(f'Accuracy: {accuracy * 100:.2f}%')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-25T08:47:55.061374Z","iopub.execute_input":"2024-12-25T08:47:55.061733Z","iopub.status.idle":"2024-12-25T08:47:55.068977Z","shell.execute_reply.started":"2024-12-25T08:47:55.061691Z","shell.execute_reply":"2024-12-25T08:47:55.067565Z"}},"outputs":[{"name":"stdout","text":"Accuracy: 81.82%\n","output_type":"stream"}],"execution_count":59}]}